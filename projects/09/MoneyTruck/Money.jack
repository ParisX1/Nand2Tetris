class Money {
    field int x, y; // screen location for each money object
    field int size; // size for each money object, in pixels
    field int location; // tracks position on screen
    field int baseScreenAddress;
    field int memAddress;
    field boolean objectActive;
    //field int memAddress;
 
    constructor Money new(int Ax, int Ay, int Asize) {
       let x = Ax;
       let y = Ay;
       let size = Asize;
       let baseScreenAddress = 16384;
       let location = setLocation();
       let memAddress = 0;
       let objectActive = true;
       do draw(); // Set initial position
       return this;
    }
 
    method void dispose() {
       do Memory.deAlloc(this);
       return;
    }
 
    method void setLocation() {
       // Sets loction on screen
       let location = (32 * y) + (x / 16);
       return;
    }
 
    method void draw() {
       // Draw object on screen
       do setLocation();
       let memAddress = baseScreenAddress + location;
       do Memory.poke(memAddress+0, -23478);
        do Memory.poke(memAddress+32, 0);
        do Memory.poke(memAddress+64, -24590);
        do Memory.poke(memAddress+96, 4112);
        do Memory.poke(memAddress+128, 4368);
        do Memory.poke(memAddress+160, 6096);
        do Memory.poke(memAddress+192, 4432);
        do Memory.poke(memAddress+224, -26670);
        do Memory.poke(memAddress+256, 5392);
        do Memory.poke(memAddress+288, 6096);
        do Memory.poke(memAddress+320, 4368);
        do Memory.poke(memAddress+352, 4112);
        do Memory.poke(memAddress+384, 4112);
        do Memory.poke(memAddress+416, -24590);
        do Memory.poke(memAddress+448, 0);
        do Memory.poke(memAddress+480, -23478);
       return;
    }
 
    method void erase() {
       // Remove object from screen
       do setLocation();
       let memAddress = baseScreenAddress + location;
       let objectActive = false;
       do Memory.poke(memAddress + 0, 0);
       do Memory.poke(memAddress + 32, 0);
       do Memory.poke(memAddress + 64, 0);
       do Memory.poke(memAddress + 96, 0);
       do Memory.poke(memAddress + 128, 0);
       do Memory.poke(memAddress + 160, 0);
       do Memory.poke(memAddress + 192, 0);
       do Memory.poke(memAddress + 224, 0);
       do Memory.poke(memAddress + 256, 0);
       do Memory.poke(memAddress + 288, 0);
       do Memory.poke(memAddress + 320, 0);
       do Memory.poke(memAddress + 352, 0);
       do Memory.poke(memAddress + 384, 0);
       do Memory.poke(memAddress + 416, 0);
       do Memory.poke(memAddress + 448, 0);
       do Memory.poke(memAddress + 480, 0);
       return;
    }


 }
 