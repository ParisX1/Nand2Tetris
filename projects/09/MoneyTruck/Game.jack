// The structure for the game class is taken from the 
// Project 9 - Square files

class Game {
   field Person person; 
   field Money currentMoneyObject;
   field int direction; // 0=none, 1=up, 2=down, 3=left, 4=right
   field int moneyArraySize; // Number of money objects to store in moneyArray
   field Array moneyArray;

   constructor Game new() {
      let person = Person.new(0, 0, 16); // x, y, size
      let moneyArraySize = 5;
      let moneyArray = Array.new(moneyArraySize);
      
      // Load new money objects into moneyArray
      let moneyArray[0] = Money.new(100,30,16);
      let moneyArray[1] = Money.new(200,200,16);
      let moneyArray[2] = Money.new(300,55,16); 
      let moneyArray[3] = Money.new(400,150,16); 
      let moneyArray[4] = Money.new(450,25,16);
      let currentMoneyObject = moneyArray[0];

      let direction = 0;  // Initial state is no movement
      return this;
   }

   method void dispose() {
      // Dealloc money objects
      var int i;
      let i = 0;
      while (~(moneyArray[i] = null)){
         let currentMoneyObject = moneyArray[0];
         do currentMoneyObject.dispose();
         let i = i + 1;
      }
      // Dealloc person and game
      do person.dispose();
      do Memory.deAlloc(this);
      return;
   }

   method void movePerson() {
      if (direction = 1) { do person.moveUp(); }
      if (direction = 2) { do person.moveDown(); }
      if (direction = 3) { do person.moveLeft(); }
      if (direction = 4) { do person.moveRight(); }
      do Sys.wait(5);  // Delay movement
      return;
   }

   method void run() {
      var char key;  // Currently pressed key
      var boolean exit;
      let exit = false;

      while (~exit) {
         // Waits for keypress
         while (key = 0) {
            let key = Keyboard.keyPressed();
            do movePerson();
         }
         if (key = 81)  { let exit = true; }     // q 
         if (key = 131) { let direction = 1; }   // up arrow
         if (key = 133) { let direction = 2; }   // down arrow
         if (key = 130) { let direction = 3; }   // left arrow
         if (key = 132) { let direction = 4; }   // right arrow

         // Wait for key release
         while (~(key = 0)) {
            let key = Keyboard.keyPressed();
            do movePerson();
         }
     } 
     return;
   }
}



