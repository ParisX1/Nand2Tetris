// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Select RAM Chip to Write
    DMux4Way(in=load, sel=address[12..13], a=chip00, b=chip01, c=chip02, d=chip03);
    
    // RAM Chips
    RAM4K(in=in, load=chip00, address=address[0..11], out=chipOut00);
    RAM4K(in=in, load=chip01, address=address[0..11], out=chipOut01);
    RAM4K(in=in, load=chip02, address=address[0..11], out=chipOut02);
    RAM4K(in=in, load=chip03, address=address[0..11], out=chipOut03);

    // Select Output
    Mux4Way16(a=chipOut00, b=chipOut01, c=chipOut02, d=chipOut03, sel=address[12..13], out=out);
}