// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // Select RAM Chip to Write
    DMux8Way(in=load, sel=address[3..5], a=chip00, b=chip01, c=chip02, d=chip03, e=chip04, f=chip05, g=chip06, h=chip07);
    
    // RAM Chips
    RAM8(in=in, load=chip00, address=address[0..2], out=chipOut00);
    RAM8(in=in, load=chip01, address=address[0..2], out=chipOut01);
    RAM8(in=in, load=chip02, address=address[0..2], out=chipOut02);
    RAM8(in=in, load=chip03, address=address[0..2], out=chipOut03);
    RAM8(in=in, load=chip04, address=address[0..2], out=chipOut04);
    RAM8(in=in, load=chip05, address=address[0..2], out=chipOut05);
    RAM8(in=in, load=chip06, address=address[0..2], out=chipOut06);
    RAM8(in=in, load=chip07, address=address[0..2], out=chipOut07);

    // Select Output
    Mux8Way16(a=chipOut00, b=chipOut01, c=chipOut02, d=chipOut03, e=chipOut04, f=chipOut05, g=chipOut06, h=chipOut07, sel=address[3..5], out=out);
}